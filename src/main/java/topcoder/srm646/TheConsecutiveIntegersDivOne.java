package topcoder.srm646;

/**
 * Created by ktao on 1/15/15.
 */

import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class TheConsecutiveIntegersDivOne {
    public int find(int[] numbers, int k) {
        Arrays.sort(numbers);
        int runningMin = Integer.MAX_VALUE;
        for(int i = 0; i < numbers.length - k + 1; i++){
            int[] subArray = Arrays.copyOfRange(numbers, i, i+k);
            int steps = findMinSteps(subArray);
            if(steps < runningMin){
                runningMin = steps;
            }

        }

        return runningMin;
    }

    public int findMinSteps(int[] wholeArray) { //assuming that we are working with the whole array here.
        int medianIndex = wholeArray.length / 2;
        int median = wholeArray[wholeArray.length / 2];
        int steps = 0;
        for(int i = 0; i < wholeArray.length; i++){
            steps += Math.abs(wholeArray[i] - (median - (medianIndex - i)));
        }
        return steps;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, boolean hasAnswer, int p2) {
        System.out.print("Test " + testNum + ": [" + "{");
        for (int i = 0; p0.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p0[i]);
        }
        System.out.print("}" + "," + p1);
        System.out.println("]");
        TheConsecutiveIntegersDivOne obj;
        int answer;
        obj = new TheConsecutiveIntegersDivOne();
        long startTime = System.currentTimeMillis();
        answer = obj.find(p0, p1);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p2);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p2;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        int[] p0;
        int p1;
        int p2;

        // ----- test 0 -----
        p0 = new int[]{4, 7, 47};
        p1 = 2;
        p2 = 2;
        all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = new int[]{1, 100};
        p1 = 1;
        p2 = 0;
        all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = new int[]{-96, -53, 82, -24, 6, -75};
        p1 = 2;
        p2 = 20;
        all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = new int[]{64, -31, -56};
        p1 = 2;
        p2 = 24;
        all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = new int[]{-96, -53, 82, -24, 6, -75};
        p1 = 4;
        p2 = 90;
        all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
        // ------------------

        // ----- test 5 -----
        p0 = new int[47];
        for(int i = 0; i < 47; i++){
            p0[i] = i * 100000;
        }
        p1 = 1;
        p2 = 90;
        all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
        // ------------------


        if (all_right) {
            System.out.println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!