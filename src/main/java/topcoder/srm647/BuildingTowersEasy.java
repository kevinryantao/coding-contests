package topcoder.srm647;

/**
 * Created by ktao on 1/24/15.
 */
import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class BuildingTowersEasy
{
    public int maxHeight(int N, int[] x, int[] t)
    {
        int leftLimitX = 1;
        int leftLimitY = 0;
        int rightLimitX = N;
        int rightLimitY = Integer.MAX_VALUE;
//
//        double maxLocationX = ((leftLimitX - leftLimitY) + (rightLimitX + rightLimitY)) / 2.0;
//        int maxHeightSoFar = (int) ((rightLimitX + rightLimitY) - maxLocationX);

        double maxLocationX = 1;
        int maxHeightSoFar = 0;

        for(int i = 0; i < x.length; i++){
            int newLimitX = x[i];
            int newLimitY = t[i];
            // first test if relevant
            if((newLimitX - newLimitY) < (leftLimitX - leftLimitY)){
                // it's irrelevant
            }

        }


        return 0;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, int[] p2, boolean hasAnswer, int p3) {
        System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
        for (int i = 0; p1.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p1[i]);
        }
        System.out.print("}" + "," + "{");
        for (int i = 0; p2.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p2[i]);
        }
        System.out.print("}");
        System.out.println("]");
        BuildingTowersEasy obj;
        int answer;
        obj = new BuildingTowersEasy();
        long startTime = System.currentTimeMillis();
        answer = obj.maxHeight(p0, p1, p2);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p3);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p3;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }
    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        int p0;
        int[] p1;
        int[] p2;
        int p3;

        // ----- test 0 -----
        p0 = 10;
        p1 = new int[]{3,8};
        p2 = new int[]{1,1};
        p3 = 3;
        all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = 100000;
        p1 = new int[]{};
        p2 = new int[]{};
        p3 = 99999;
        all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = 2718;
        p1 = new int[]{1,30,400,1300,2500};
        p2 = new int[]{100000,100000,100000,100000,100000};
        p3 = 2717;
        all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = 20;
        p1 = new int[]{4,7,13,15,18};
        p2 = new int[]{3,8,1,17,16};
        p3 = 8;
        all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = 447;
        p1 = new int[]{32,35,55,60,61,88,91,97,128,151,181,186,192,196,198,237,259,268,291,314,341,367,389,390,391,428,435};
        p2 = new int[]{81,221,172,641,25,953,330,141,123,440,692,394,200,649,78,726,50,810,501,4,216,407,2,172,0,29,14};
        p3 = 120;
        all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 5 -----
        p0 = 97638;
        p1 = new int[]{8,1749,4550,5388,6752,7089,9737,14891,16671,16821,17691,19753,24589,25348,30114,32213,34376,36467,37699,41490,44784,44893,57316,58275,58567,61122,61489,63195,64776,65905,68788,69908,72853,78152,78784,82779,84488,86277,88611,92793,93214,97583};
        p2 = new int[]{16610,6,497,14,42892,31,79,1203,518,31147,597,7846,1396,8309,12,14,1148,433,23693,13,1939,244,19,46,27,611,412,10,27023,19141,34,15667,588,10,229,83,390,14,38441,16021,4,39386};
        p3 = 6343;
        all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
        // ------------------

        if (all_right) {
            System.out.println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
