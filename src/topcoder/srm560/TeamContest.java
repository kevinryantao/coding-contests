package topcoder.srm560;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class TeamContest {
    public int worstRank(int[] strength) {
        int myOwnStrength = Math.max(strength[0],
                                     Math.max(strength[1], strength[2]))
                + Math.min(strength[0], Math.min(strength[1], strength[2]));

        List<Integer> myOpponents = new ArrayList<Integer>();
        for (int i = 3; i < strength.length; i++) {
            myOpponents.add(strength[i]);
        }
        Collections.sort(myOpponents, Collections.reverseOrder());
        int countOfBetterTeams = 1;
        for (int i = 0; i < strength.length / 3 - 1; i++) {
            int bestOpponent = myOpponents.remove(0);
            for (int j = myOpponents.size() - 1; j > 0; j--) {
                if (bestOpponent + myOpponents.get(j) > myOwnStrength) {
                    myOpponents.remove(j);
                    myOpponents.remove(j - 1);
                    countOfBetterTeams += 1;
                    break;
                }
            }
        }


        return countOfBetterTeams;
    }


    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, int p1) {
        System.out.print("Test " + testNum + ": [" + "{");
        for (int i = 0; p0.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p0[i]);
        }
        System.out.print("}");
        System.out.println("]");
        TeamContest obj;
        int answer;
        obj = new TeamContest();
        long startTime = System.currentTimeMillis();
        answer = obj.worstRank(p0);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p1);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p1;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        int[] p0;
        int p1;

        // ----- test 0 -----
        p0 = new int[]{5, 7, 3, 5, 7, 3, 5, 7, 3};
        p1 = 2;
        all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = new int[]{5, 7, 3};
        p1 = 1;
        all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
        p1 = 1;
        all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = new int[]{3, 9, 4, 6, 2, 6, 1, 6, 9, 1, 4, 1, 3, 8, 5};
        p1 = 3;
        all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = new int[]{53, 47, 88, 79, 99, 75, 28, 54, 65, 14, 22, 13, 11, 31, 43};
        p1 = 3;
        all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
        // ------------------

        if (all_right) {
            System.out.println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!